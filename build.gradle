buildscript {	buildscript {
    ext {	
        springBootVersion = '1.5.4.RELEASE'	
    }	
    repositories {	    repositories {
        mavenCentral()	        mavenCentral()
    }	    }
    dependencies {	    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")	        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    }	    }
}	}

 plugins {	plugins {
  id "org.sonarqube" version "2.7"	  id "org.sonarqube" version "2.7"
}	}
apply plugin: 'java'	apply plugin: 'java'
apply plugin: 'eclipse'	apply plugin: 'eclipse'
apply plugin: 'idea'	apply plugin: 'idea'
apply plugin: 'org.springframework.boot'	apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


 version = '2.17.1-SNAPSHOT'	bootJar {

     baseName = 'gs-spring-boot'
processResources.destinationDir = compileJava.destinationDir	    version =  '0.1.0'
compileJava.dependsOn processResources	

 jar {	
    baseName = 'spring-boot-example'	
    version =  version	
}	}


 repositories {	repositories {
    mavenCentral()	    mavenCentral()
    mavenLocal()	
    maven { url "http://repo.spring.io/libs-snapshot" }	
    maven { url "http://repo.spring.io/milestone" }	
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }	
}	}


 sourceCompatibility = 1.8
targetCompatibility = 1.8

 dependencies {	dependencies {
    compile("org.springframework.boot:spring-boot-devtools")	
    compile("org.springframework.boot:spring-boot-starter-web")	    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-jdbc")	
    compile("org.seasar.doma.boot:doma-spring-boot-starter:1.1.0")	
    compile("com.h2database:h2")	
    testCompile("junit:junit")	    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")	
}	}

 task wrapper(type: Wrapper) {	
    gradleVersion = '2.0'	
}	

 apply from:'eclipse.gradle'	

 idea.module.inheritOutputDirs = true
